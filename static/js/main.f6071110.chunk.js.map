{"version":3,"sources":["components/Jumbotron.js","components/ImageCard.js","components/MainContainer.js","App.js","index.js"],"names":["Jumbotron","className","ImageCard","props","key","id","onClick","handleClick","clicked","name","src","image","alt","style","size","MainContainer","state","images","message","score","topScore","imageOrder","forEach","index","setState","sort","Math","random","newScore","newTopScore","this","map","Component","App","ReactDOM","render","document","getElementById"],"mappings":"kwEAaeA,G,MAXG,WACd,OACI,yBAAKC,UAAU,6BACV,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,aAAd,yBACD,uBAAGA,UAAU,QAAb,6EACA,uBAAGA,UAAU,UAAb,iD,mCCGDC,EATG,SAACC,GACf,OACI,yBAAKF,UAAU,wDACfG,IAAKD,EAAME,GACXC,QAAS,kBAAMH,EAAMI,YAAYJ,EAAME,GAAIF,EAAMK,WAC7C,yBAAKH,GAAIF,EAAMM,KAAMC,IAAKP,EAAMQ,MAAOC,IAAKT,EAAMM,KAAMI,MAAOV,EAAMW,S,OCoElEC,E,2MAtEXC,MAAQ,CACJC,SACAC,QAAS,4BACTC,MAAO,EACPC,SAAU,G,EAEdb,YAAc,SAACF,EAAIG,GACf,IAAMa,EAAa,EAAKL,MAAMC,OAE9B,GAAGT,EAIC,OAHAa,EAAWC,SAAQ,SAACX,EAAOY,GACvBF,EAAWE,GAAOf,SAAU,KAEzB,EAAKgB,SAAS,CACjBb,MAAOU,EAAWI,MAAK,kBAAMC,KAAKC,SAAW,MAC7CT,QAAS,qDACTC,MAAO,IAIXE,EAAWC,SAAQ,SAACX,EAAOY,GAC/BlB,IAAOM,EAAMN,KAChBgB,EAAWE,GAAOf,SAAU,MAHrB,MAOmB,EAAKQ,MAAzBI,EAPC,EAODA,SACFQ,EARG,EAOST,MACO,EACnBU,EAAcD,EAAWR,EAAWQ,EAAWR,EAErD,OAAO,EAAKI,SAAS,CACpBb,MAAOU,EAAWI,MAAK,kBAAMC,KAAKC,SAAW,MAC7CT,QAAS,yBACTC,MAAOS,EACPR,SAAUS,K,wEAKD,IAAD,OACJ,OACI,yBAAK5B,UAAU,qCACxB,yBAAKA,UAAU,2BACZ,2BAAI6B,KAAKd,MAAME,UAEhB,yBAAKjB,UAAU,0BACd,qCAAW6B,KAAKd,MAAMG,MAAtB,iBAA2CW,KAAKd,MAAMI,UACpC,8BAEpB,yBAAKnB,UAAU,aAEd,yBAAKA,UAAU,OACd6B,KAAKd,MAAMC,OAAOc,KAAI,SAAApB,GAAK,OAC3B,kBAAC,EAAD,CACCP,IAAKO,EAAMN,GACXA,GAAIM,EAAMN,GACVI,KAAME,EAAMF,KACZD,QAASG,EAAMH,QACfG,MAAOA,EAAMA,MACbJ,YAAa,EAAKA,wB,GA5DGyB,aCUbC,MATf,WACE,OACE,yBAAKhC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCJNiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f6071110.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Jumbotron = () => {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n             <div className=\"container text-center\">\r\n                 <h1 className=\"display-4\">Remember The Villain!</h1>\r\n                <p className=\"lead\">Click on an image to earn points! Don't click on an image more than once.</p>\r\n                <p className=\"follow\">Can you remember the ones you've clicked?</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Jumbotron;","import React from 'react';\r\n\r\nconst ImageCard = (props) => {\r\n    return (\r\n        <div className=\"allCards col-xs-6 col-sm-6 col-md-4 col-lg-3 col-xl-3\" \r\n        key={props.id}\r\n        onClick={() => props.handleClick(props.id, props.clicked)}>\r\n            <img id={props.name} src={props.image} alt={props.name} style={props.size} />\r\n        </div>\r\n    )\r\n}\r\nexport default ImageCard;\r\n  ","import React, { Component } from 'react';\r\nimport ImageCard from './ImageCard';\r\nimport images from '../images.json';\r\n\r\nclass MainContainer extends Component {\r\n    state = {\r\n        images,\r\n        message: \"Click a villain to begin!\",\r\n        score: 0,\r\n        topScore: 0\r\n    };\r\n    handleClick = (id, clicked) => {\r\n        const imageOrder = this.state.images;\r\n\r\n        if(clicked){\r\n            imageOrder.forEach((image, index)=>{\r\n                imageOrder[index].clicked = false;\r\n            });\r\n            return this.setState({\r\n                image: imageOrder.sort(() => Math.random() - 0.5),\r\n                message: \"You guessed WRONG! -- Click an image to try again.\",\r\n                score: 0\r\n            })\r\n        }\r\n        else{\r\n            imageOrder.forEach((image, index) => {\r\n\t\t\t\tif (id === image.id) {\r\n\t\t\t\t\timageOrder[index].clicked = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconst { topScore, score } = this.state;\r\n\t\t\tconst newScore = score + 1;\r\n\t\t\tconst newTopScore = newScore > topScore ? newScore : topScore;\r\n\r\n\t\t\treturn this.setState({\r\n\t\t\t\timage: imageOrder.sort(() => Math.random() - 0.5),\r\n\t\t\t\tmessage: \"You guessed correctly!\",\r\n\t\t\t\tscore: newScore,\r\n\t\t\t\ttopScore: newTopScore,\r\n\t\t\t})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid mainCardContainer\">\r\n\t\t\t<div className=\"gameMessage text-center\">\r\n\t\t\t\t\t\t<p>{this.state.message}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"gameScores text-center\">\r\n\t\t\t\t\t\t<p>Score: {this.state.score} | Top Score: {this.state.topScore}</p>\r\n                        <bR></bR>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t{this.state.images.map(image => (\r\n\t\t\t\t\t\t<ImageCard\r\n\t\t\t\t\t\t\tkey={image.id}\r\n\t\t\t\t\t\t\tid={image.id}\r\n\t\t\t\t\t\t\tname={image.name}\r\n\t\t\t\t\t\t\tclicked={image.clicked}\r\n\t\t\t\t\t\t\timage={image.image}\r\n\t\t\t\t\t\t\thandleClick={this.handleClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainContainer;","import React from 'react';\nimport './App.css';\nimport Jumbotron from './components/Jumbotron';\nimport MainGameContainer from './components/MainContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Jumbotron />\n      <MainGameContainer />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n\n\n\n"],"sourceRoot":""}